<script src="Bot.js"></script>
<script src="SvgDrawer.js"></script>
<script src="SvgCoolCircle.js"></script>
<script src="GaphAwa.js"></script>
<script src="CanvasLab.js"></script>
<script type="text/javascript">
let canvas = $(`<canvas width="${window.innerWidth}" height="${window.innerHeight}" style='position:absolute; top:0px; left:0px;  background-color:transparent;z-index:2;pointer-events:none;'></canvas>`);
//$("body").append(canvas);
let main = $(`<div style='width:${window.innerWidth}px; height:${window.innerHeight}px; z-index:1;background-image: linear-gradient(black,rgb(8,10,10),rgb(5,7,7));'></div>`);
//$("body").append(main);
class Buble{
       constructor(args){
            this.color = args.color;
            this.lineWidth = args.lWidth;
            this.background_color = args.background_color;
            this.x= args.x;
            this.y= args.y;
            this.radius= args.r;
            this.startAngle= args.start?args.start:0;
            this.endAngle= args.end?args.end: 2 * Math.PI;
       }
       draw(ctx,args){
           ctx.beginPath();
           ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle);
           ctx.fillStyle = this.background_color;
           ctx.fill(); 
           ctx.strokeStyle = this.color;
           ctx.lineWidth = this.lineWidth;
           ctx.stroke();
       }
   }
   class Line{
       constructor(args){
            this.color = args.color;
            this.lineWidth = args.lWidth;
            this.x1 = args.x1;
            this.y1 = args.y1;
            this.x2= args.x2;
            this.y2= args.y2;
            this.save = {
                x1:args.x1,
                y1:args.y1,
                x2:args.x2,
                y2:args.y2
            };
            this.timer = false;
            this.start();
       }
       start(){
           this.timer = setInterval(()=>{
             this.update();
           },0);
       }
       update(){

             this.x2 = this.x2+1;
             this.x1 = this.x1+3;
             if(this.x2 >1000){
               this.x2 = this.save.x2;
               this.x1 = this.save.x1;
             }
       }
       draw(ctx){
           ctx.beginPath();
           ctx.moveTo(this.x1, this.y1);
           ctx.lineTo(this.x2, this.y2);
           ctx.fillStyle = this.background_color;
           ctx.strokeStyle = this.color;
           ctx.lineWidth = this.lineWidth;
           ctx.stroke();
       }
   }

   class CanvasActor{
       constructor(args){
            this.canvas = args.canvas;
            this.ctx = this.canvas.getContext("2d");
            this.conponents = [];
            this.colors = ['yellow','blue','steelblue','dodgerblue','red','grey','white']
            this.declare();
            this.start();
       }
       declare(){
           for(let i =0; i<37; i++){
                this.conponents.push(new Buble({
                    x:(i*100)+35,
                    y:100,
                    r:3,
                    start:0,
                    lWidth:1,
                    background_color:'white',
                    color:'steelblue',
                    end:2 * Math.PI
                }));
           }
           {{!-- for(let i =0; i<1; i++){
                this.conponents.push(new Line({
                    x1:100,
                    y1:100,
                    x2:(i*100)+300,
                    y2:100,
                    lWidth:5,
                    background_color:this.colors[i],
                    color:'steelblue'
                }));
           } --}}
       }
       clear(){
         this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
       }
       scene(){
            this.clear();
            for(let i =0; i<this.conponents.length; i++){
                    this.conponents[i].draw(this.ctx);
            }
            this.line(2,7,300,7);
       }
       stop(){
           clearInterval(this.timer);
           this.timer = false;
       }
       start(){
           if(!this.timer){
            this.timer = setInterval(()=>{
                this.scene();
            },0);
           }
       }
       line(x,y,x2,y2){
           this.ctx.beginPath();
           this.ctx.moveTo(x, y);
           this.ctx.lineTo(x2, y2);
           this.ctx.stroke();
       }
       clickEvent(x,y){
         this.line(0,0,x,y);
       }
       
   }


 {{!-- const actor = new CanvasActor({canvas:canvas[0]});
    main.click((e)=>{
    e.stopPropagation();
    let x = e.clientX;
    let y = e.clientY;
    actor.clickEvent(x,y);
    console.log(x,y);
}); --}}
$("body").css({
    "background-color":'rgb(5,10,10)'
});
var colors = ["rgba(46,204,113,0.6)","rgba(52,152,219,0.6)","rgba(244,66,66,0.6)","rgba(217,66,244,0.6)","rgba(244,197,66,0.6)","rgba(44,91,75,0.6)","rgba(128,128,128,0.6)","rgba(0,0,128,0.6)","rgba(0,255,0,0.6)","rgba(0,255,255,0.6)","rgba(0,128,128,0.6)","rgba(255,255,255,0.6)"];
let test_color = colors[1];
 new GraphAwa({
    host:$("body"),
    width:1000,
    height:500,
    data:{
        type:'bar',
        items:[
        {label:"joy", value:100,color:test_color},
        {label:"Sadness", value:106,color:test_color},
        {label:"love", value:10,color:test_color},
        {label:"friends", value:70,color:test_color},
        {label:"success", value:10,color:test_color},
        {label:"anxiety", value:100,color:test_color},
        {label:"anxiety 3", value:200},
        {label:"anxiety 3", value:1000},

           // {label:"joy", value:-200,color:test_color},
        // {label:"Sadness", value:0.07,color:this.test_color},
        // {label:"love", value:1,color:this.test_color},
        ]
          }
    }); 

     new GraphAwa({
    host:$("body"),
    width:1000,
    height:500,
    data:{
        type:'waterfall',
        items:[
        {label:"Well", value:1000,color:test_color},
        {label:"joy", value:100,color:test_color},
        {label:"Sadness", value:-170,color:test_color},
        {label:"love", value:-70,color:test_color},
        {label:"friends", value:70,color:test_color},
        {label:"success", value:103,color:test_color},
        {label:"anxiety", value:-300,color:test_color},
        {label:"motivation", value:30,color:test_color},
         {label:"Sadness", value:-170,color:test_color},
         {label:"cal", value:`sum(joy,love,success)`,color:test_color},
        {label:"love", value:-70,color:test_color},
        {label:"friends", value:70,color:test_color},
        {label:"success", value:103,color:test_color},
        {label:"anxiety", value:-300,color:test_color},
        {label:"motivation", value:30,color:test_color}

           // {label:"joy", value:-200,color:test_color},
        // {label:"Sadness", value:0.07,color:this.test_color},
        // {label:"love", value:1,color:this.test_color},
        ]
          }
    });
     new GraphAwa({
    host:$("body"),
    width:1000,
    height:500,
    data:{
        type:'waterfall',
        items:[
        {label:"Well", value:1000,color:test_color},
        {label:"joy", value:100,color:test_color},
        {label:"Sadness", value:-170,color:test_color},
        {label:"love", value:-70,color:test_color},
        {label:"friends", value:70,color:test_color},
        {label:"success", value:103,color:test_color},
        {label:"anxiety", value:-300,color:test_color},
        {label:"motivation", value:30,color:test_color},
         {label:"Sadness", value:-170,color:test_color},
         {label:"cal", value:`sum(joy,love,success)`,color:test_color},
        {label:"love", value:-70,color:test_color},
        {label:"friends", value:70,color:test_color},
        {label:"success", value:103,color:test_color},
        {label:"anxiety", value:-300,color:test_color},
        {label:"motivation", value:30,color:test_color}

           // {label:"joy", value:-200,color:test_color},
        // {label:"Sadness", value:0.07,color:this.test_color},
        // {label:"love", value:1,color:this.test_color},
        ]
          }
    });

    new CanvasLab({
        host:$("body"),
        width:1000,
        height:500,
    });

    new CanvasClock({
        host:$("body"),
        width:1000,
        height:500,
    });
</script>